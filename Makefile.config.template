# Your SDK Directories
HOME = ~
SDK_PATH = $(HOME)Developer/prjs/embeded/nrf/nrf51_sdk_v6_0_0_43681/nrf51822/
SOFTDEVICE_HEX_PATH = $(HOME)Developer/prjs/embeded/nrf/s110_nrf51822_7.0.0/s110_nrf51822_7.0.0_softdevice.hex
BUILD_SCRIPTS_PATH = $(HOME)Developer/prjs/embeded/prjs/nrf51822/build_scripts/
TEMPLATE_PATH = $(BUILD_SCRIPTS_PATH)

# HOME = ~
#SDK_PATH = $(HOME)/nRF51_SDK_v6.0.0.43681/Nordic/nrf51822
# ifeq ($(USE_SOFTDEVICE), S110-v6)
# 	SOFTDEVICE_HEX_PATH = /run/media/death/F2FS/s110_nrf51822_6_0_0/s110_nrf51822_6.0.0_softdevice.hex
# else
# 	SOFTDEVICE_HEX_PATH = /run/media/death/F2FS/s110_nrf51822_7_0_0/s110_nrf51822_7.0.0_softdevice.hex
# endif

ifeq ($(OS),Windows_NT)
    ifeq ($(findstring 86, $(ProgramFiles)), )
    	PROGFILES := C:/Program Files
    else
    	PROGFILES := C:/Program Files (x86)
    endif
    
    GNU_INSTALL_ROOT := $(PROGFILES)/GNU Tools ARM Embedded/4.7 2013q1
    GNU_VERSION := 4.7.3
    GNU_PREFIX := arm-none-eabi
else
    GNU_INSTALL_ROOT := $(HOME)Developer/prjs/embeded/gcc-arm-none-eabi-4_8-2014q2
    # GNU_INSTALL_ROOT := /opt/gcc-arm-none-eabi-4_8-2014q2
    GNU_VERSION := 4.8.4
    GNU_PREFIX := arm-none-eabi
endif



# Flasher selection
FLASHER := JLink
#FLASHER := OpenOCD

# Toolchain commands
JLINK           := JLinkExe -Device nrf51822 -speed 100 -if swd
#You need to change openOCD clause depending your dongle. I have stlink-v2 and it's working. Jlink will work if you fetch latest trunk from git.
OPENOCD		:= /usr/local/bin/openocd -f interface/stlink-v2.cfg -c"transport select hla_swd" -f target/nrf51.cfg
#OPENOCD		:= /usr/local/bin/openocd -f interface/jlink.cfg -c"transport select swd ; adapter_khz 1000 ; adapter_nsrst_delay 10" -f /home/death/de/nrf51.cfg
